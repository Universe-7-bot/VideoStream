<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Upload Video</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="/css/style1.css">
</head>

<body>
    <%- include("components/header.ejs") %>
        <div class="upload-main-div">
            <div class="row upload-row">
                <div class="col-md-6 upload-col-1 d-flex align-items-center justify-content-center">
                    <div class="upload-wrapper">
                        <p class="upload-header text-center">Upload your video here</p>
                        <div class="row">
                            <div class="col-md-6">
                                <div id="drag-drop-zone">
                                    <img class="upload-icon" src="images/upload-icon.svg" alt="upload-icon">
                                    <p class="drag-drop-text">Drag and drop video file here or</p>
                                    <button id="upload-button">Upload</button>
                                    <input type="file" id="file-input" accept="video/*" multiple>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div id="video-wrapper"></div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div id="drag-drop-zone-img">
                                    <img class="upload-icon" src="images/upload-icon.svg" alt="upload-icon">
                                    <p class="drag-drop-text">Drag and drop image file here or</p>
                                    <button id="upload-button-img">Upload</button>
                                    <input type="file" id="file-input-img" accept="image/*" multiple>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div id="image-wrapper"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 upload-col-2 d-flex align-items-center justify-content-center">
                    <img class="upload-img" src="images/upload1.svg" alt="home">
                </div>
            </div>
        </div>
        <%- include("components/footer.ejs") %>
            <script>
                const dragDropZone = document.getElementById("drag-drop-zone");
                const dragDropText = document.querySelector(".drag-drop-text");
                const uploadButton = document.getElementById("upload-button");
                const fileInput = document.getElementById("file-input");

                const dragDropZoneImg = document.getElementById("drag-drop-zone-img");
                const uploadButtonImg = document.getElementById("upload-button-img");
                const fileInputImg = document.getElementById("file-input-img");

                dragDropZone.addEventListener("dragover", (event) => {
                    event.preventDefault();
                    dragDropZone.classList.add("drag-over");
                });

                dragDropZone.addEventListener("dragleave", () => {
                    dragDropZone.classList.remove("drag-over");
                });

                dragDropZoneImg.addEventListener("dragleave", () => {
                    dragDropZoneImg.classList.remove("drag-over");
                });

                dragDropZone.addEventListener("drop", (event) => {
                    event.preventDefault();
                    dragDropZone.classList.remove("drag-over");
                    const files = event.dataTransfer.files;
                    handleFiles(files);
                });

                fileInput.addEventListener("change", (event) => {
                    const files = event.target.files;
                    handleFiles(files);
                });

                uploadButton.addEventListener("click", () => {
                    fileInput.click();
                });

                dragDropZoneImg.addEventListener("dragover", (event) => {
                    event.preventDefault();
                    dragDropZoneImg.classList.add("drag-over");
                });

                dragDropZoneImg.addEventListener("dragleave", () => {
                    dragDropZoneImg.classList.remove("drag-over");
                });

                dragDropZoneImg.addEventListener("drop", (event) => {
                    event.preventDefault();
                    dragDropZoneImg.classList.remove("drag-over");
                    const imgFiles = event.dataTransfer.files;
                    handleImages(imgFiles);
                });

                fileInputImg.addEventListener("change", (event) => {
                    const imgFiles = event.target.files;
                    handleImages(imgFiles);
                });

                uploadButtonImg.addEventListener("click", () => {
                    fileInputImg.click();
                });

                function handleFiles(files) {
                    const videoWrapper = document.getElementById("video-wrapper");
                    videoWrapper.style.display = "block";

                    const existingVideoElement = document.querySelector(".uploaded-video");
                    if (existingVideoElement) {
                        existingVideoElement.remove();
                    }

                    for (let i = 0; i < files.length; i++) {
                        const file = files[i];
                        const fileType = file.type.split("/")[0];
                        if (fileType === "video") {
                            const videoElement = document.createElement("video");
                            videoElement.src = URL.createObjectURL(file);
                            videoElement.controls = true;
                            videoElement.classList.add("uploaded-video");
                            videoWrapper.appendChild(videoElement);
                            break;
                        }
                    }
                }

                function handleImages(files) {
                    const imageWrapper = document.getElementById("image-wrapper");
                    imageWrapper.style.display = "block";

                    const existingImageElement = document.querySelector(".uploaded-image");
                    if (existingImageElement) {
                        existingImageElement.remove();
                    }

                    for (let i = 0; i < files.length; i++) {
                        const file = files[i];
                        const fileType = file.type.split("/")[0];
                        if (fileType === "image") {
                            const imageElement = document.createElement("img");
                            imageElement.src = URL.createObjectURL(file);
                            imageElement.classList.add("uploaded-image");
                            imageWrapper.appendChild(imageElement);
                            break;
                        }
                    }
                }

            </script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
                integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"
                crossorigin="anonymous"></script>
</body>

</html>